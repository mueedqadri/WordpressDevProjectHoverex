{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://wp/@wordpress/core-data/src/actions.js","webpack://wp/@wordpress/core-data/src/entities.js","webpack://wp/@wordpress/core-data/src/entity-provider.js","webpack://wp/@wordpress/core-data/src/index.js","webpack://wp/@wordpress/core-data/src/name.js","webpack://wp/@wordpress/core-data/src/queried-data/actions.js","webpack://wp/@wordpress/core-data/src/queried-data/get-query-parts.js","webpack://wp/@wordpress/core-data/src/queried-data/index.js","webpack://wp/@wordpress/core-data/src/queried-data/reducer.js","webpack://wp/@wordpress/core-data/src/queried-data/selectors.js","webpack://wp/@wordpress/core-data/src/reducer.js","webpack://wp/@wordpress/core-data/src/resolvers.js","webpack://wp/@wordpress/core-data/src/selectors.js","webpack://wp/@wordpress/core-data/src/utils/conservative-map-item.js","webpack://wp/@wordpress/core-data/src/utils/get-normalized-comma-separable.js","webpack://wp/@wordpress/core-data/src/utils/if-matching-action.js","webpack://wp/@wordpress/core-data/src/utils/if-not-resolved.js","webpack://wp/@wordpress/core-data/src/utils/index.js","webpack://wp/@wordpress/core-data/src/utils/on-sub-key.js","webpack://wp/@wordpress/core-data/src/utils/replace-action.js","webpack://wp/@wordpress/core-data/src/utils/with-weak-map-cache.js","webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/external {\"this\":\"regeneratorRuntime\"}","webpack://wp/external {\"this\":[\"wp\",\"blocks\"]}","webpack://wp/external {\"this\":[\"wp\",\"data\"]}","webpack://wp/external {\"this\":[\"wp\",\"dataControls\"]}","webpack://wp/external {\"this\":[\"wp\",\"deprecated\"]}","webpack://wp/external {\"this\":[\"wp\",\"element\"]}","webpack://wp/external {\"this\":[\"wp\",\"i18n\"]}","webpack://wp/external {\"this\":[\"wp\",\"isShallowEqual\"]}","webpack://wp/external {\"this\":[\"wp\",\"url\"]}","webpack://wp/external {\"this\":\"lodash\"}"],"names":["deleteEntityRecord","editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","receiveUserQuery","queryID","users","type","castArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","map","record","status","title","action","receiveQueriedItems","receiveItems","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","getKindEntities","entity","find","deletedRecord","path","baseURL","addQueryArgs","apiFetch","method","removeItems","error","edits","options","syncSelect","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","isEqual","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","entityIdKey","DEFAULT_ENTITY_KEY","entries","evaluatedValue","persistedRecord","currentUserId","id","autosavePost","data","includes","get","updatedRecord","newRecord","receiveAutosaves","persistedEntity","currentEdits","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves","loadPostTypeEntities","loadTaxonomyEntities","defaultEntities","label","__","getTitle","plural","blocks","kinds","loadEntities","postTypes","postType","rest_base","labels","singular_name","selectionStart","selectionEnd","startCase","slug","taxonomies","taxonomy","getMethodName","prefix","usePlural","kindPrefix","upperFirst","camelCase","nameSuffix","suffix","length","kindConfig","context","createContext","getEntity","EntityProvider","children","Provider","useEntityId","useContext","useEntityProp","prop","_id","providerId","useSelect","select","getEntityRecord","getEditedEntityRecord","editedEntity","fullValue","useDispatch","setValue","useCallback","newValue","useEntityBlockEditor","initialEdits","blocksProp","contentProp","content","setContent","useEffect","initialBlocks","useMemo","parsedContent","parse","onInput","onChange","nextBlocks","blocksToSerialize","serialize","entitySelectors","result","state","selectors","args","entityResolvers","resolvers","pluralMethodName","shouldInvalidate","entityActions","actions","registerStore","REDUCER_KEY","reducer","controls","items","itemIds","getQueryParts","parts","stableKey","page","perPage","fields","include","sort","i","Number","getNormalizedCommaSeparable","slice","withWeakMapCache","getMergedItemIds","nextItemIds","receivedAllIds","nextItemIdsStartIndex","size","Math","max","mergedItemIds","Array","isInNextItemsRange","accumulator","itemId","conservativeMapItem","newState","omit","itemIsComplete","isCompleteQuery","isArray","item","receiveQueries","flowRight","ifMatchingAction","replaceAction","onSubKey","queries","removedItems","forEach","queryItems","filter","queryId","combineReducers","queriedItemsCacheByState","WeakMap","getQueriedItemsUncached","startOffset","endOffset","min","hasOwnProperty","filteredItem","f","field","split","set","push","getQueriedItems","createSelector","queriedItemsCache","queriedItems","EquivalentKeyMap","terms","byId","keyBy","user","stylesheet","themes","entityConfig","queriedData","queriedDataReducer","nextState","nextEdits","saving","pending","deleting","entitiesConfig","newConfig","config","entitiesDataReducer","entitiesByKind","groupBy","memo","subEntities","kindReducer","kindMemo","newData","UNDO_INITIAL_STATE","offset","lastEditAction","isCreateUndoLevel","isUndoOrRedo","some","flattenedUndo","pop","comparisonUndoEdits","values","comparisonEdits","isShallowEqual","embedPreviews","userPermissions","autosavesData","getAuthors","__unstableGetAuthor","getCurrentUser","getEntityRecords","getCurrentTheme","getThemeSupports","getEmbedPreview","canUser","getAutosaves","getAutosave","_fields","uniq","join","hasRecords","getRawEntityRecord","ifNotResolved","activeThemes","theme_supports","embedProxyResponse","deprecated","alternative","resource","methods","create","read","update","delete","response","hasIn","allowHeader","headers","compact","restBase","isRequestingEmbedPreview","createRegistrySelector","isResolving","getUserQueryResults","queryResults","getEntitiesByKind","queriedState","__experimentalGetEntityRecordNoResolver","_key","hasEntityRecords","__experimentalGetDirtyEntityRecords","dirtyRecords","primaryKeys","primaryKey","hasEditsForEntityRecord","entityRecord","getEntityRecordEdits","getEntityRecordNonTransientEdits","isSavingEntityRecord","isAutosavingEntityRecord","Boolean","isDeletingEntityRecord","getLastEntitySaveError","getLastEntityDeleteError","getCurrentUndoOffset","getUndoEdit","getRedoEdit","hasUndo","hasRedo","isPreviewEmbedFallback","oEmbedLinkCheck","html","defaultTo","authorId","author","hasFetchedAutosaves","hasFinishedResolution","getReferenceByDistinctEdits","nextItem","hasChanges","isMatch","resolver","selectorName","resolveIfNotResolved","hasStartedResolution","actionProperty","nextKeyState","replacer","fn","cache","has","isObjectLike"],"mappings":"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ACH;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA,mCAAmC;;AAEnC;;AAEA,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,GAAG;AACnB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;;;;;;;;;;;AClTA;AAAa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;ACjRD,aAAa,6CAA6C,EAAE,I;;;;;;;;;;;ACA5D,aAAa,uCAAuC,EAAE,I;;;;;;;;;;;ACAtD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,6CAA6C,EAAE,I;;;;;;;;;;;ACA5D,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I;;;;;;;;;;;ACAvD,aAAa,qCAAqC,EAAE,I;;;;;;;;;;;ACApD,aAAa,+CAA+C,EAAE,I;;;;;;;;;;;ACA9D,aAAa,oCAAoC,EAAE,I;;;;;;;;;;;ACAnD,aAAa,iCAAiC,EAAE,I","file":"core-data.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/@wordpress/core-data/build-module/index.js\");\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { apiFetch, syncSelect } from '@wordpress/data-controls';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches\n *\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query );\n\t} else {\n\t\taction = receiveItems( records );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}  kind              Kind of the deleted entity.\n * @param {string}  name              Name of the deleted entity.\n * @param {string}  recordId          Record ID of the deleted entity.\n * @param {?Object} query             Special query parameters for the DELETE API call.\n */\nexport function* deleteEntityRecord( kind, name, recordId, query ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tlet error;\n\tlet deletedRecord = false;\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tyield {\n\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t};\n\n\ttry {\n\t\tlet path = `${ entity.baseURL }/${ recordId }`;\n\n\t\tif ( query ) {\n\t\t\tpath = addQueryArgs( path, query );\n\t\t}\n\n\t\tdeletedRecord = yield apiFetch( {\n\t\t\tpath,\n\t\t\tmethod: 'DELETE',\n\t\t} );\n\n\t\tyield removeItems( kind, name, recordId, true );\n\t} catch ( _error ) {\n\t\terror = _error;\n\t}\n\n\tyield {\n\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t};\n\n\treturn deletedRecord;\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield syncSelect( 'core', 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield syncSelect(\n\t\t'core',\n\t\t'getRawEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst editedRecord = yield syncSelect(\n\t\t'core',\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield syncSelect( 'core', 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield syncSelect( 'core', 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}  kind                       Kind of the received entity.\n * @param {string}  name                       Name of the received entity.\n * @param {Object}  record                     Record to be saved.\n * @param {Object}  options                    Saving options.\n * @param {boolean} [options.isAutosave=false] Whether this is an autosave.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\t// Evaluate optimized edits.\n\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\tif ( typeof value === 'function' ) {\n\t\t\tconst evaluatedValue = value(\n\t\t\t\tyield syncSelect(\n\t\t\t\t\t'core',\n\t\t\t\t\t'getEditedEntityRecord',\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t)\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t\trecord[ key ] = evaluatedValue;\n\t\t}\n\t}\n\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tisAutosave,\n\t};\n\tlet updatedRecord;\n\tlet error;\n\tlet persistedEntity;\n\tlet currentEdits;\n\ttry {\n\t\tconst path = `${ entity.baseURL }${ recordId ? '/' + recordId : '' }`;\n\t\tconst persistedRecord = yield syncSelect(\n\t\t\t'core',\n\t\t\t'getRawEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tif ( isAutosave ) {\n\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t// so the client just sends and receives objects.\n\t\t\tconst currentUser = yield syncSelect( 'core', 'getCurrentUser' );\n\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\tconst autosavePost = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'getAutosave',\n\t\t\t\tpersistedRecord.type,\n\t\t\t\tpersistedRecord.id,\n\t\t\t\tcurrentUserId\n\t\t\t);\n\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t// So we fallback to the previous autosave and then\n\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t// have a value.\n\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{ status: data.status === 'auto-draft' ? 'draft' : data.status }\n\t\t\t);\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t// when its update is requested by the author and the post had\n\t\t\t// draft or auto-draft status.\n\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\tlet newRecord = {\n\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t...data,\n\t\t\t\t\t...updatedRecord,\n\t\t\t\t};\n\t\t\t\tnewRecord = Object.keys( newRecord ).reduce( ( acc, key ) => {\n\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} );\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tnewRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t}\n\t\t} else {\n\t\t\t// Auto drafts should be converted to drafts on explicit saves and we should not respect their default title,\n\t\t\t// but some plugins break with this behavior so we can't filter it on the server.\n\t\t\tlet data = record;\n\t\t\tif (\n\t\t\t\tkind === 'postType' &&\n\t\t\t\tpersistedRecord &&\n\t\t\t\tpersistedRecord.status === 'auto-draft'\n\t\t\t) {\n\t\t\t\tif ( ! data.status ) {\n\t\t\t\t\tdata = { ...data, status: 'draft' };\n\t\t\t\t}\n\t\t\t\tif ( ! data.title || data.title === 'Auto Draft' ) {\n\t\t\t\t\tdata = { ...data, title: '' };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get the full local version of the record before the update,\n\t\t\t// to merge it with the edits and then propagate it to subscribers\n\t\t\tpersistedEntity = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'__experimentalGetEntityRecordNoResolver',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tcurrentEdits = yield syncSelect(\n\t\t\t\t'core',\n\t\t\t\t'getEntityRecordEdits',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t{ ...persistedEntity, ...data },\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tupdatedRecord,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t} catch ( _error ) {\n\t\terror = _error;\n\n\t\t// If we got to the point in the try block where we made an optimistic update,\n\t\t// we need to roll it back here.\n\t\tif ( persistedEntity && currentEdits ) {\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tpersistedEntity,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t...currentEdits,\n\t\t\t\t\t...( yield syncSelect(\n\t\t\t\t\t\t'core',\n\t\t\t\t\t\t'getEntityRecordEdits',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t) ),\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t\tisAutosave,\n\t};\n\n\treturn updatedRecord;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield syncSelect(\n\t\t\t'core',\n\t\t\t'hasEditsForEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield syncSelect(\n\t\t'core',\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n","/**\n * External dependencies\n */\nimport { upperFirst, camelCase, map, find, get, startCase } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { apiFetch, syncSelect } from '@wordpress/data-controls';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { addEntities } from './actions';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\n\nexport const defaultEntities = [\n\t{\n\t\tlabel: __( 'Base' ),\n\t\tname: '__unstableBase',\n\t\tkind: 'root',\n\t\tbaseURL: '',\n\t},\n\t{\n\t\tlabel: __( 'Site' ),\n\t\tname: 'site',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/settings',\n\t\tgetTitle: ( record ) => {\n\t\t\treturn get( record, [ 'title' ], __( 'Site Title' ) );\n\t\t},\n\t},\n\t{\n\t\tlabel: __( 'Post Type' ),\n\t\tname: 'postType',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/types',\n\t},\n\t{\n\t\tname: 'media',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/media',\n\t\tplural: 'mediaItems',\n\t\tlabel: __( 'Media' ),\n\t},\n\t{\n\t\tname: 'taxonomy',\n\t\tkind: 'root',\n\t\tkey: 'slug',\n\t\tbaseURL: '/wp/v2/taxonomies',\n\t\tplural: 'taxonomies',\n\t\tlabel: __( 'Taxonomy' ),\n\t},\n\t{\n\t\tname: 'sidebar',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/sidebars',\n\t\tplural: 'sidebars',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widget areas' ),\n\t},\n\t{\n\t\tname: 'widget',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/widgets',\n\t\tplural: 'widgets',\n\t\ttransientEdits: { blocks: true },\n\t\tlabel: __( 'Widgets' ),\n\t},\n\t{\n\t\tlabel: __( 'User' ),\n\t\tname: 'user',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/users',\n\t\tplural: 'users',\n\t},\n\t{\n\t\tname: 'comment',\n\t\tkind: 'root',\n\t\tbaseURL: '/wp/v2/comments',\n\t\tplural: 'comments',\n\t\tlabel: __( 'Comment' ),\n\t},\n\t{\n\t\tname: 'menu',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menus',\n\t\tplural: 'menus',\n\t\tlabel: __( 'Menu' ),\n\t},\n\t{\n\t\tname: 'menuItem',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menu-items',\n\t\tplural: 'menuItems',\n\t\tlabel: __( 'Menu Item' ),\n\t},\n\t{\n\t\tname: 'menuLocation',\n\t\tkind: 'root',\n\t\tbaseURL: '/__experimental/menu-locations',\n\t\tplural: 'menuLocations',\n\t\tlabel: __( 'Menu Location' ),\n\t\tkey: 'name',\n\t},\n];\n\nexport const kinds = [\n\t{ name: 'postType', loadEntities: loadPostTypeEntities },\n\t{ name: 'taxonomy', loadEntities: loadTaxonomyEntities },\n];\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadPostTypeEntities() {\n\tconst postTypes = yield apiFetch( { path: '/wp/v2/types?context=edit' } );\n\treturn map( postTypes, ( postType, name ) => {\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: '/wp/v2/' + postType.rest_base,\n\t\t\tname,\n\t\t\tlabel: postType.labels.singular_name,\n\t\t\ttransientEdits: {\n\t\t\t\tblocks: true,\n\t\t\t\tselectionStart: true,\n\t\t\t\tselectionEnd: true,\n\t\t\t},\n\t\t\tmergedEdits: { meta: true },\n\t\t\tgetTitle( record ) {\n\t\t\t\tif ( name === 'wp_template_part' || name === 'wp_template' ) {\n\t\t\t\t\treturn startCase( record.slug );\n\t\t\t\t}\n\t\t\t\treturn get( record, [ 'title', 'rendered' ], record.id );\n\t\t\t},\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadTaxonomyEntities() {\n\tconst taxonomies = yield apiFetch( {\n\t\tpath: '/wp/v2/taxonomies?context=edit',\n\t} );\n\treturn map( taxonomies, ( taxonomy, name ) => {\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: '/wp/v2/' + taxonomy.rest_base,\n\t\t\tname,\n\t\t\tlabel: taxonomy.labels.singular_name,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the entity's getter method name given its kind and name.\n *\n * @param {string}  kind      Entity kind.\n * @param {string}  name      Entity name.\n * @param {string}  prefix    Function prefix.\n * @param {boolean} usePlural Whether to use the plural form or not.\n *\n * @return {string} Method name\n */\nexport const getMethodName = (\n\tkind,\n\tname,\n\tprefix = 'get',\n\tusePlural = false\n) => {\n\tconst entity = find( defaultEntities, { kind, name } );\n\tconst kindPrefix = kind === 'root' ? '' : upperFirst( camelCase( kind ) );\n\tconst nameSuffix =\n\t\tupperFirst( camelCase( name ) ) + ( usePlural ? 's' : '' );\n\tconst suffix =\n\t\tusePlural && entity.plural\n\t\t\t? upperFirst( camelCase( entity.plural ) )\n\t\t\t: nameSuffix;\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n\n/**\n * Loads the kind entities into the store.\n *\n * @param {string} kind  Kind\n *\n * @return {Array} Entities\n */\nexport function* getKindEntities( kind ) {\n\tlet entities = yield syncSelect( 'core', 'getEntitiesByKind', kind );\n\tif ( entities && entities.length !== 0 ) {\n\t\treturn entities;\n\t}\n\n\tconst kindConfig = find( kinds, { name: kind } );\n\tif ( ! kindConfig ) {\n\t\treturn [];\n\t}\n\n\tentities = yield kindConfig.loadEntities();\n\tyield addEntities( entities );\n\n\treturn entities;\n}\n","/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, serialize } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { defaultEntities, kinds } from './entities';\n\nconst entities = {\n\t...defaultEntities.reduce( ( acc, entity ) => {\n\t\tif ( ! acc[ entity.kind ] ) {\n\t\t\tacc[ entity.kind ] = {};\n\t\t}\n\t\tacc[ entity.kind ][ entity.name ] = { context: createContext() };\n\t\treturn acc;\n\t}, {} ),\n\t...kinds.reduce( ( acc, kind ) => {\n\t\tacc[ kind.name ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntity = ( kind, type ) => {\n\tif ( ! entities[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entities[ kind ][ type ] ) {\n\t\tentities[ kind ][ type ] = { context: createContext() };\n\t}\n\n\treturn entities[ kind ][ type ];\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity type.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity type.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type, id, children } ) {\n\tconst Provider = getEntity( kind, type ).context.Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n */\nexport function useEntityId( kind, type ) {\n\treturn useContext( getEntity( kind, type ).context );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind  The entity kind.\n * @param {string} type  The entity type.\n * @param {string} prop  The property name.\n * @param {string} [_id] An entity ID to use instead of the context-provided one.\n *\n * @return {[*, Function]} A tuple where the first item is the\n *                          property value and the second is the\n *                          setter.\n */\nexport function useEntityProp( kind, type, prop, _id ) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\n\tconst { value, fullValue } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select( 'core' );\n\t\t\tconst entity = getEntityRecord( kind, type, id ); // Trigger resolver.\n\t\t\tconst editedEntity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn entity && editedEntity\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: editedEntity[ prop ],\n\t\t\t\t\t\tfullValue: entity[ prop ],\n\t\t\t\t  }\n\t\t\t\t: {};\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, type, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\treturn [ value, setValue, fullValue ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind                            The entity kind.\n * @param {string} type                            The entity type.\n * @param {Object} options\n * @param {Object} [options.initialEdits]          Initial edits object for the entity record.\n * @param {string} [options.blocksProp='blocks']   The name of the entity prop that holds the blocks array.\n * @param {string} [options.contentProp='content'] The name of the entity prop that holds the serialized blocks.\n * @param {string} [options.id]                    An entity ID to use instead of the context-provided one.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor(\n\tkind,\n\ttype,\n\t{\n\t\tinitialEdits,\n\t\tblocksProp = 'blocks',\n\t\tcontentProp = 'content',\n\t\tid: _id,\n\t} = {}\n) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\n\tconst [ content, setContent ] = useEntityProp(\n\t\tkind,\n\t\ttype,\n\t\tcontentProp,\n\t\tid\n\t);\n\n\tconst { editEntityRecord } = useDispatch( 'core' );\n\tuseEffect( () => {\n\t\tif ( initialEdits ) {\n\t\t\teditEntityRecord( kind, type, id, initialEdits, {\n\t\t\t\tundoIgnore: true,\n\t\t\t} );\n\t\t}\n\t}, [ id ] );\n\tconst initialBlocks = useMemo( () => {\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already.\n\t\tif ( content && typeof content !== 'function' ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\treturn parsedContent.length ? parsedContent : [];\n\t\t}\n\t\treturn [];\n\t}, [ content ] );\n\tconst [ blocks = initialBlocks, onInput ] = useEntityProp(\n\t\tkind,\n\t\ttype,\n\t\tblocksProp,\n\t\tid\n\t);\n\n\tconst onChange = useCallback(\n\t\t( nextBlocks ) => {\n\t\t\tonInput( nextBlocks );\n\t\t\t// Use a function edit to avoid serializing often.\n\t\t\tsetContent( ( { blocks: blocksToSerialize } ) =>\n\t\t\t\tserialize( blocksToSerialize )\n\t\t\t);\n\t\t},\n\t\t[ onInput, setContent ]\n\t);\n\treturn [ blocks, onInput, onChange ];\n}\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\nimport { controls } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport { defaultEntities, getMethodName } from './entities';\nimport { REDUCER_KEY } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key ) =>\n\t\tselectors.getEntityRecord( state, kind, name, key );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) =>\n\t\tselectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key ) =>\n\t\tresolvers.getEntityRecord( kind, name, key );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) =>\n\t\tresolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) =>\n\t\tresolvers.getEntityRecords.shouldInvalidate(\n\t\t\taction,\n\t\t\tkind,\n\t\t\tname,\n\t\t\t...args\n\t\t);\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) =>\n\t\tactions.saveEntityRecord( kind, name, key );\n\tresult[ getMethodName( kind, name, 'delete' ) ] = ( key, query ) =>\n\t\tactions.deleteEntityRecord( kind, name, key, query );\n\treturn result;\n}, {} );\n\nregisterStore( REDUCER_KEY, {\n\treducer,\n\tcontrols,\n\tactions: { ...actions, ...entityActions },\n\tselectors: { ...selectors, ...entitySelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n\nexport { default as EntityProvider } from './entity-provider';\nexport * from './entity-provider';\n","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @type {string}\n */\nexport const REDUCER_KEY = 'core';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that items have been received.\n *\n * @param {Array} items Items received.\n *\n * @return {Object} Action object.\n */\nexport function receiveItems( items ) {\n\treturn {\n\t\ttype: 'RECEIVE_ITEMS',\n\t\titems: castArray( items ),\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been\n * deleted and they need to be removed from entities state.\n *\n * @param {string}       kind             Kind of the removed entities.\n * @param {string}       name             Name of the removed entities.\n * @param {Array|number} records          Record IDs of the removed entities.\n * @param {boolean}      invalidateCache  Controls whether we want to invalidate the cache.\n * @return {Object} Action object.\n */\nexport function removeItems( kind, name, records, invalidateCache = false ) {\n\treturn {\n\t\ttype: 'REMOVE_ITEMS',\n\t\titemIds: castArray( records ),\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that queried data has been\n * received.\n *\n * @param {Array}   items Queried items received.\n * @param {?Object} query Optional query object.\n *\n * @return {Object} Action object.\n */\nexport function receiveQueriedItems( items, query = {} ) {\n\treturn {\n\t\t...receiveItems( items ),\n\t\tquery,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { withWeakMapCache, getNormalizedCommaSeparable } from '../utils';\n\n/**\n * An object of properties describing a specific query.\n *\n * @typedef {Object} WPQueriedDataQueryParts\n *\n * @property {number}      page      The query page (1-based index, default 1).\n * @property {number}      perPage   Items per page for query (default 10).\n * @property {string}      stableKey An encoded stable string of all non-\n *                                   pagination, non-fields query parameters.\n * @property {?(string[])} fields    Target subset of fields to derive from\n *                                   item objects.\n * @property {?(number[])} include   Specific item IDs to include.\n */\n\n/**\n * Given a query object, returns an object of parts, including pagination\n * details (`page` and `perPage`, or default values). All other properties are\n * encoded into a stable (idempotent) `stableKey` value.\n *\n * @param {Object} query Optional query object.\n *\n * @return {WPQueriedDataQueryParts} Query parts.\n */\nexport function getQueryParts( query ) {\n\t/**\n\t * @type {WPQueriedDataQueryParts}\n\t */\n\tconst parts = {\n\t\tstableKey: '',\n\t\tpage: 1,\n\t\tperPage: 10,\n\t\tfields: null,\n\t\tinclude: null,\n\t};\n\n\t// Ensure stable key by sorting keys. Also more efficient for iterating.\n\tconst keys = Object.keys( query ).sort();\n\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tconst value = query[ key ];\n\n\t\tswitch ( key ) {\n\t\t\tcase 'page':\n\t\t\t\tparts[ key ] = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'per_page':\n\t\t\t\tparts.perPage = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tcase 'include':\n\t\t\t\tparts.include = getNormalizedCommaSeparable( value ).map(\n\t\t\t\t\tNumber\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// While in theory, we could exclude \"_fields\" from the stableKey\n\t\t\t\t// because two request with different fields have the same results\n\t\t\t\t// We're not able to ensure that because the server can decide to omit\n\t\t\t\t// fields from the response even if we explicitely asked for it.\n\t\t\t\t// Example: Asking for titles in posts without title support.\n\t\t\t\tif ( key === '_fields' ) {\n\t\t\t\t\tparts.fields = getNormalizedCommaSeparable( value );\n\t\t\t\t}\n\n\t\t\t\t// While it could be any deterministic string, for simplicity's\n\t\t\t\t// sake mimic querystring encoding for stable key.\n\t\t\t\t//\n\t\t\t\t// TODO: For consistency with PHP implementation, addQueryArgs\n\t\t\t\t// should accept a key value pair, which may optimize its\n\t\t\t\t// implementation for our use here, vs. iterating an object\n\t\t\t\t// with only a single key.\n\t\t\t\tparts.stableKey +=\n\t\t\t\t\t( parts.stableKey ? '&' : '' ) +\n\t\t\t\t\taddQueryArgs( '', { [ key ]: value } ).slice( 1 );\n\t\t}\n\t}\n\n\treturn parts;\n}\n\nexport default withWeakMapCache( getQueryParts );\n","export * from './actions';\nexport * from './selectors';\nexport { default as reducer } from './reducer';\n","/**\n * External dependencies\n */\nimport { map, flowRight, omit, forEach, filter } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tconservativeMapItem,\n\tifMatchingAction,\n\treplaceAction,\n\tonSubKey,\n} from '../utils';\nimport { DEFAULT_ENTITY_KEY } from '../entities';\nimport getQueryParts from './get-query-parts';\n\n/**\n * Returns a merged array of item IDs, given details of the received paginated\n * items. The array is sparse-like with `undefined` entries where holes exist.\n *\n * @param {?Array<number>} itemIds     Original item IDs (default empty array).\n * @param {number[]}       nextItemIds Item IDs to merge.\n * @param {number}         page        Page of items merged.\n * @param {number}         perPage     Number of items per page.\n *\n * @return {number[]} Merged array of item IDs.\n */\nexport function getMergedItemIds( itemIds, nextItemIds, page, perPage ) {\n\tconst receivedAllIds = page === 1 && perPage === -1;\n\tif ( receivedAllIds ) {\n\t\treturn nextItemIds;\n\t}\n\tconst nextItemIdsStartIndex = ( page - 1 ) * perPage;\n\n\t// If later page has already been received, default to the larger known\n\t// size of the existing array, else calculate as extending the existing.\n\tconst size = Math.max(\n\t\titemIds.length,\n\t\tnextItemIdsStartIndex + nextItemIds.length\n\t);\n\n\t// Preallocate array since size is known.\n\tconst mergedItemIds = new Array( size );\n\n\tfor ( let i = 0; i < size; i++ ) {\n\t\t// Preserve existing item ID except for subset of range of next items.\n\t\tconst isInNextItemsRange =\n\t\t\ti >= nextItemIdsStartIndex &&\n\t\t\ti < nextItemIdsStartIndex + nextItemIds.length;\n\n\t\tmergedItemIds[ i ] = isInNextItemsRange\n\t\t\t? nextItemIds[ i - nextItemIdsStartIndex ]\n\t\t\t: itemIds[ i ];\n\t}\n\n\treturn mergedItemIds;\n}\n\n/**\n * Reducer tracking items state, keyed by ID. Items are assumed to be normal,\n * where identifiers are common across all queries.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nfunction items( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\tconst key = action.key || DEFAULT_ENTITY_KEY;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.items.reduce( ( accumulator, value ) => {\n\t\t\t\t\tconst itemId = value[ key ];\n\t\t\t\t\taccumulator[ itemId ] = conservativeMapItem(\n\t\t\t\t\t\tstate[ itemId ],\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}, {} ),\n\t\t\t};\n\t\tcase 'REMOVE_ITEMS':\n\t\t\tconst newState = omit( state, action.itemIds );\n\t\t\treturn newState;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking item completeness, keyed by ID. A complete item is one for\n * which all fields are known. This is used in supporting `_fields` queries,\n * where not all properties associated with an entity are necessarily returned.\n * In such cases, completeness is used as an indication of whether it would be\n * safe to use queried data for a non-`_fields`-limited request.\n *\n * @param {Object<string,boolean>} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object<string,boolean>} Next state.\n */\nexport function itemIsComplete( state = {}, action ) {\n\tconst { type, query, key = DEFAULT_ENTITY_KEY } = action;\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\t// An item is considered complete if it is received without an associated\n\t// fields query. Ideally, this would be implemented in such a way where the\n\t// complete aggregate of all fields would satisfy completeness. Since the\n\t// fields are not consistent across all entity types, this would require\n\t// introspection on the REST schema for each entity to know which fields\n\t// compose a complete item for that entity.\n\tconst isCompleteQuery =\n\t\t! query || ! Array.isArray( getQueryParts( query ).fields );\n\n\treturn {\n\t\t...state,\n\t\t...action.items.reduce( ( result, item ) => {\n\t\t\tconst itemId = item[ key ];\n\n\t\t\t// Defer to completeness if already assigned. Technically the\n\t\t\t// data may be outdated if receiving items for a field subset.\n\t\t\tresult[ itemId ] = state[ itemId ] || isCompleteQuery;\n\n\t\t\treturn result;\n\t\t}, {} ),\n\t};\n}\n\n/**\n * Reducer tracking queries state, keyed by stable query key. Each reducer\n * query object includes `itemIds` and `requestingPageByPerPage`.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst receiveQueries = flowRight( [\n\t// Limit to matching action type so we don't attempt to replace action on\n\t// an unhandled action.\n\tifMatchingAction( ( action ) => 'query' in action ),\n\n\t// Inject query parts into action for use both in `onSubKey` and reducer.\n\treplaceAction( ( action ) => {\n\t\t// `ifMatchingAction` still passes on initialization, where state is\n\t\t// undefined and a query is not assigned. Avoid attempting to parse\n\t\t// parts. `onSubKey` will omit by lack of `stableKey`.\n\t\tif ( action.query ) {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\t...getQueryParts( action.query ),\n\t\t\t};\n\t\t}\n\n\t\treturn action;\n\t} ),\n\n\t// Queries shape is shared, but keyed by query `stableKey` part. Original\n\t// reducer tracks only a single query object.\n\tonSubKey( 'stableKey' ),\n] )( ( state = null, action ) => {\n\tconst { type, page, perPage, key = DEFAULT_ENTITY_KEY } = action;\n\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\treturn getMergedItemIds(\n\t\tstate || [],\n\t\tmap( action.items, key ),\n\t\tpage,\n\t\tperPage\n\t);\n} );\n\n/**\n * Reducer tracking queries state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst queries = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\treturn receiveQueries( state, action );\n\t\tcase 'REMOVE_ITEMS':\n\t\t\tconst newState = { ...state };\n\t\t\tconst removedItems = action.itemIds.reduce( ( result, itemId ) => {\n\t\t\t\tresult[ itemId ] = true;\n\t\t\t\treturn result;\n\t\t\t}, {} );\n\t\t\tforEach( newState, ( queryItems, key ) => {\n\t\t\t\tnewState[ key ] = filter( queryItems, ( queryId ) => {\n\t\t\t\t\treturn ! removedItems[ queryId ];\n\t\t\t\t} );\n\t\t\t} );\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers( {\n\titems,\n\titemIsComplete,\n\tqueries,\n} );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport EquivalentKeyMap from 'equivalent-key-map';\nimport { get, set } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport getQueryParts from './get-query-parts';\n\n/**\n * Cache of state keys to EquivalentKeyMap where the inner map tracks queries\n * to their resulting items set. WeakMap allows garbage collection on expired\n * state references.\n *\n * @type {WeakMap<Object,EquivalentKeyMap>}\n */\nconst queriedItemsCacheByState = new WeakMap();\n\n/**\n * Returns items for a given query, or null if the items are not known.\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nfunction getQueriedItemsUncached( state, query ) {\n\tconst { stableKey, page, perPage, include, fields } = getQueryParts(\n\t\tquery\n\t);\n\tlet itemIds;\n\tif ( Array.isArray( include ) && ! stableKey ) {\n\t\t// If the parsed query yields a set of IDs, but otherwise no filtering,\n\t\t// it's safe to consider targeted item IDs as the include set. This\n\t\t// doesn't guarantee that those objects have been queried, which is\n\t\t// accounted for below in the loop `null` return.\n\t\titemIds = include;\n\t\t// TODO: Avoid storing the empty stable string in reducer, since it\n\t\t// can be computed dynamically here always.\n\t} else if ( state.queries[ stableKey ] ) {\n\t\titemIds = state.queries[ stableKey ];\n\t}\n\n\tif ( ! itemIds ) {\n\t\treturn null;\n\t}\n\n\tconst startOffset = perPage === -1 ? 0 : ( page - 1 ) * perPage;\n\tconst endOffset =\n\t\tperPage === -1\n\t\t\t? itemIds.length\n\t\t\t: Math.min( startOffset + perPage, itemIds.length );\n\n\tconst items = [];\n\tfor ( let i = startOffset; i < endOffset; i++ ) {\n\t\tconst itemId = itemIds[ i ];\n\t\tif ( Array.isArray( include ) && ! include.includes( itemId ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( ! state.items.hasOwnProperty( itemId ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = state.items[ itemId ];\n\n\t\tlet filteredItem;\n\t\tif ( Array.isArray( fields ) ) {\n\t\t\tfilteredItem = {};\n\n\t\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\t\tconst value = get( item, field );\n\t\t\t\tset( filteredItem, field, value );\n\t\t\t}\n\t\t} else {\n\t\t\t// If expecting a complete item, validate that completeness, or\n\t\t\t// otherwise abort.\n\t\t\tif ( ! state.itemIsComplete[ itemId ] ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfilteredItem = item;\n\t\t}\n\n\t\titems.push( filteredItem );\n\t}\n\n\treturn items;\n}\n\n/**\n * Returns items for a given query, or null if the items are not known. Caches\n * result both per state (by reference) and per query (by deep equality).\n * The caching approach is intended to be durable to query objects which are\n * deeply but not referentially equal, since otherwise:\n *\n * `getQueriedItems( state, {} ) !== getQueriedItems( state, {} )`\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nexport const getQueriedItems = createSelector( ( state, query = {} ) => {\n\tlet queriedItemsCache = queriedItemsCacheByState.get( state );\n\tif ( queriedItemsCache ) {\n\t\tconst queriedItems = queriedItemsCache.get( query );\n\t\tif ( queriedItems !== undefined ) {\n\t\t\treturn queriedItems;\n\t\t}\n\t} else {\n\t\tqueriedItemsCache = new EquivalentKeyMap();\n\t\tqueriedItemsCacheByState.set( state, queriedItemsCache );\n\t}\n\n\tconst items = getQueriedItemsUncached( state, query );\n\tqueriedItemsCache.set( query, items );\n\treturn items;\n} );\n","/**\n * External dependencies\n */\nimport { keyBy, map, groupBy, flowRight, isEqual, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { defaultEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Reducer managing terms state. Keyed by taxonomy slug, the value is either\n * undefined (if no request has been made for given taxonomy), null (if a\n * request is in-flight for given taxonomy), or the array of terms for the\n * taxonomy.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function terms( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TERMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.taxonomy ]: action.terms,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.users, 'id' ),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: map(\n\t\t\t\t\t\taction.users,\n\t\t\t\t\t\t( user ) => user.id\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing current user state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function currentUser( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_USER':\n\t\t\treturn action.currentUser;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing taxonomies.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function taxonomies( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TAXONOMIES':\n\t\t\treturn action.taxonomies;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing the current theme.\n *\n * @param {string} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {string} Updated state.\n */\nexport function currentTheme( state = undefined, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_THEME':\n\t\t\treturn action.currentTheme.stylesheet;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing installed themes.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function themes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_THEME':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.currentTheme.stylesheet ]: action.currentTheme,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing theme supports data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function themeSupports( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_SUPPORTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.themeSupports,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching\n *  - Editing\n *  - Saving\n *\n * @param {Object} entityConfig  Entity config.\n *\n * @return {Function} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn flowRight( [\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction(\n\t\t\t( action ) =>\n\t\t\t\taction.name &&\n\t\t\t\taction.kind &&\n\t\t\t\taction.name === entityConfig.name &&\n\t\t\t\taction.kind === entityConfig.kind\n\t\t),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t};\n\t\t} ),\n\t] )(\n\t\tcombineReducers( {\n\t\t\tqueriedData: queriedDataReducer,\n\n\t\t\tedits: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'RECEIVE_ITEMS':\n\t\t\t\t\t\tconst nextState = { ...state };\n\n\t\t\t\t\t\tfor ( const record of action.items ) {\n\t\t\t\t\t\t\tconst recordId = record[ action.key ];\n\t\t\t\t\t\t\tconst edits = nextState[ recordId ];\n\t\t\t\t\t\t\tif ( ! edits ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst nextEdits = Object.keys( edits ).reduce(\n\t\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t\t// If the edited value is still different to the persisted value,\n\t\t\t\t\t\t\t\t\t// keep the edited value in edits.\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t// Edits are the \"raw\" attribute values, but records may have\n\t\t\t\t\t\t\t\t\t\t// objects with more properties, so we use `get` here for the\n\t\t\t\t\t\t\t\t\t\t// comparison.\n\t\t\t\t\t\t\t\t\t\t! isEqual(\n\t\t\t\t\t\t\t\t\t\t\tedits[ key ],\n\t\t\t\t\t\t\t\t\t\t\tget(\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ],\n\t\t\t\t\t\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\t\t\t\t\t\trecord[ key ]\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif ( Object.keys( nextEdits ).length ) {\n\t\t\t\t\t\t\t\tnextState[ recordId ] = nextEdits;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete nextState[ recordId ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nextState;\n\n\t\t\t\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\t\t\t\tconst nextEdits = {\n\t\t\t\t\t\t\t...state[ action.recordId ],\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.keys( nextEdits ).forEach( ( key ) => {\n\t\t\t\t\t\t\t// Delete cleared edits so that the properties\n\t\t\t\t\t\t\t// are not considered dirty.\n\t\t\t\t\t\t\tif ( nextEdits[ key ] === undefined ) {\n\t\t\t\t\t\t\t\tdelete nextEdits[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: nextEdits,\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tsaving: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type === 'SAVE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t\tisAutosave: action.isAutosave,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tdeleting: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'DELETE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending:\n\t\t\t\t\t\t\t\t\taction.type ===\n\t\t\t\t\t\t\t\t\t'DELETE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\t\t} )\n\t);\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = defaultEntities, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [ ...state, ...action.entities ];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a dynamic reducer for the entities\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = groupBy( newConfig, 'kind' );\n\t\tentitiesDataReducer = combineReducers(\n\t\t\tObject.entries( entitiesByKind ).reduce(\n\t\t\t\t( memo, [ kind, subEntities ] ) => {\n\t\t\t\t\tconst kindReducer = combineReducers(\n\t\t\t\t\t\tsubEntities.reduce(\n\t\t\t\t\t\t\t( kindMemo, entityConfig ) => ( {\n\t\t\t\t\t\t\t\t...kindMemo,\n\t\t\t\t\t\t\t\t[ entityConfig.name ]: entity( entityConfig ),\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\n\t\t\t\t\tmemo[ kind ] = kindReducer;\n\t\t\t\t\treturn memo;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t)\n\t\t);\n\t}\n\n\tconst newData = entitiesDataReducer( state.data, action );\n\n\tif (\n\t\tnewData === state.data &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\tdata: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * Reducer keeping track of entity edit undo history.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nconst UNDO_INITIAL_STATE = [];\nUNDO_INITIAL_STATE.offset = 0;\nlet lastEditAction;\nexport function undo( state = UNDO_INITIAL_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'EDIT_ENTITY_RECORD':\n\t\tcase 'CREATE_UNDO_LEVEL':\n\t\t\tlet isCreateUndoLevel = action.type === 'CREATE_UNDO_LEVEL';\n\t\t\tconst isUndoOrRedo =\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t( action.meta.isUndo || action.meta.isRedo );\n\t\t\tif ( isCreateUndoLevel ) {\n\t\t\t\taction = lastEditAction;\n\t\t\t} else if ( ! isUndoOrRedo ) {\n\t\t\t\t// Don't lose the last edit cache if the new one only has transient edits.\n\t\t\t\t// Transient edits don't create new levels so updating the cache would make\n\t\t\t\t// us skip an edit later when creating levels explicitly.\n\t\t\t\tif (\n\t\t\t\t\tObject.keys( action.edits ).some(\n\t\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tlastEditAction = action;\n\t\t\t\t} else {\n\t\t\t\t\tlastEditAction = {\n\t\t\t\t\t\t...action,\n\t\t\t\t\t\tedits: {\n\t\t\t\t\t\t\t...( lastEditAction && lastEditAction.edits ),\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet nextState;\n\t\t\tif ( isUndoOrRedo ) {\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.offset =\n\t\t\t\t\tstate.offset + ( action.meta.isUndo ? -1 : 1 );\n\n\t\t\t\tif ( state.flattenedUndo ) {\n\t\t\t\t\t// The first undo in a sequence of undos might happen while we have\n\t\t\t\t\t// flattened undos in state. If this is the case, we want execution\n\t\t\t\t\t// to continue as if we were creating an explicit undo level. This\n\t\t\t\t\t// will result in an extra undo level being appended with the flattened\n\t\t\t\t\t// undo values.\n\t\t\t\t\tisCreateUndoLevel = true;\n\t\t\t\t\taction = lastEditAction;\n\t\t\t\t} else {\n\t\t\t\t\treturn nextState;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! action.meta.undo ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\t// Transient edits don't create an undo level, but are\n\t\t\t// reachable in the next meaningful edit to which they\n\t\t\t// are merged. They are defined in the entity's config.\n\t\t\tif (\n\t\t\t\t! isCreateUndoLevel &&\n\t\t\t\t! Object.keys( action.edits ).some(\n\t\t\t\t\t( key ) => ! action.transientEdits[ key ]\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnextState = [ ...state ];\n\t\t\t\tnextState.flattenedUndo = {\n\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t...action.edits,\n\t\t\t\t};\n\t\t\t\tnextState.offset = state.offset;\n\t\t\t\treturn nextState;\n\t\t\t}\n\n\t\t\t// Clear potential redos, because this only supports linear history.\n\t\t\tnextState =\n\t\t\t\tnextState || state.slice( 0, state.offset || undefined );\n\t\t\tnextState.offset = nextState.offset || 0;\n\t\t\tnextState.pop();\n\t\t\tif ( ! isCreateUndoLevel ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.meta.undo.kind,\n\t\t\t\t\tname: action.meta.undo.name,\n\t\t\t\t\trecordId: action.meta.undo.recordId,\n\t\t\t\t\tedits: {\n\t\t\t\t\t\t...state.flattenedUndo,\n\t\t\t\t\t\t...action.meta.undo.edits,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// When an edit is a function it's an optimization to avoid running some expensive operation.\n\t\t\t// We can't rely on the function references being the same so we opt out of comparing them here.\n\t\t\tconst comparisonUndoEdits = Object.values(\n\t\t\t\taction.meta.undo.edits\n\t\t\t).filter( ( edit ) => typeof edit !== 'function' );\n\t\t\tconst comparisonEdits = Object.values( action.edits ).filter(\n\t\t\t\t( edit ) => typeof edit !== 'function'\n\t\t\t);\n\t\t\tif ( ! isShallowEqual( comparisonUndoEdits, comparisonEdits ) ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.kind,\n\t\t\t\t\tname: action.name,\n\t\t\t\t\trecordId: action.recordId,\n\t\t\t\t\tedits: isCreateUndoLevel\n\t\t\t\t\t\t? { ...state.flattenedUndo, ...action.edits }\n\t\t\t\t\t\t: action.edits,\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning autosaves keyed by their parent's post id.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function autosaves( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_AUTOSAVES':\n\t\t\tconst { postId, autosaves: autosavesData } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: autosavesData,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tterms,\n\tusers,\n\tcurrentTheme,\n\tcurrentUser,\n\ttaxonomies,\n\tthemes,\n\tthemeSupports,\n\tentities,\n\tundo,\n\tembedPreviews,\n\tuserPermissions,\n\tautosaves,\n} );\n","/**\n * External dependencies\n */\nimport { find, includes, get, hasIn, compact, uniq } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\nimport { apiFetch, select, syncSelect } from '@wordpress/data-controls';\n\n/**\n * Internal dependencies\n */\nimport {\n\treceiveUserQuery,\n\treceiveCurrentTheme,\n\treceiveCurrentUser,\n\treceiveEntityRecords,\n\treceiveThemeSupports,\n\treceiveEmbedPreview,\n\treceiveUserPermission,\n\treceiveAutosaves,\n} from './actions';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport { ifNotResolved, getNormalizedCommaSeparable } from './utils';\n\n/**\n * Requests authors from the REST API.\n *\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n */\nexport function* getAuthors( query ) {\n\tconst path = addQueryArgs(\n\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\tquery\n\t);\n\tconst users = yield apiFetch( { path } );\n\tyield receiveUserQuery( path, users );\n}\n\n/**\n * Temporary approach to resolving editor access to author queries.\n *\n * @param {number} id The author id.\n */\nexport function* __unstableGetAuthor( id ) {\n\tconst path = `/wp/v2/users?who=authors&include=${ id }`;\n\tconst users = yield apiFetch( { path } );\n\tyield receiveUserQuery( 'author', users );\n}\n\n/**\n * Requests the current user from the REST API.\n */\nexport function* getCurrentUser() {\n\tconst currentUser = yield apiFetch( { path: '/wp/v2/users/me' } );\n\tyield receiveCurrentUser( currentUser );\n}\n\n/**\n * Requests an entity's record from the REST API.\n *\n * @param {string}           kind  Entity kind.\n * @param {string}           name  Entity name.\n * @param {number|string}    key   Record's key\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n */\nexport function* getEntityRecord( kind, name, key = '', query ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tif ( query !== undefined && query._fields ) {\n\t\t// If requesting specific fields, items and query assocation to said\n\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t// the ID.\n\t\tquery = {\n\t\t\t...query,\n\t\t\t_fields: uniq( [\n\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) || [] ),\n\t\t\t\tentity.key || DEFAULT_ENTITY_KEY,\n\t\t\t] ).join(),\n\t\t};\n\t}\n\n\t// Disable reason: While true that an early return could leave `path`\n\t// unused, it's important that path is derived using the query prior to\n\t// additional query modifications in the condition below, since those\n\t// modifications are relevant to how the data is tracked in state, and not\n\t// for how the request is made to the REST API.\n\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\tconst path = addQueryArgs( entity.baseURL + '/' + key, {\n\t\t...query,\n\t\tcontext: 'edit',\n\t} );\n\n\tif ( query !== undefined ) {\n\t\tquery = { ...query, include: [ key ] };\n\n\t\t// The resolution cache won't consider query as reusable based on the\n\t\t// fields, so it's tested here, prior to initiating the REST request,\n\t\t// and without causing `getEntityRecords` resolution to occur.\n\t\tconst hasRecords = yield syncSelect(\n\t\t\t'core',\n\t\t\t'hasEntityRecords',\n\t\t\tkind,\n\t\t\tname,\n\t\t\tquery\n\t\t);\n\t\tif ( hasRecords ) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst record = yield apiFetch( { path } );\n\tyield receiveEntityRecords( kind, name, record, query );\n}\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getRawEntityRecord = ifNotResolved(\n\tgetEntityRecord,\n\t'getEntityRecord'\n);\n\n/**\n * Requests an entity's record from the REST API.\n */\nexport const getEditedEntityRecord = ifNotResolved(\n\tgetRawEntityRecord,\n\t'getRawEntityRecord'\n);\n\n/**\n * Requests the entity's records from the REST API.\n *\n * @param {string}  kind   Entity kind.\n * @param {string}  name   Entity name.\n * @param {Object?} query  Query Object.\n */\nexport function* getEntityRecords( kind, name, query = {} ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\n\tif ( query._fields ) {\n\t\t// If requesting specific fields, items and query assocation to said\n\t\t// records are stored by ID reference. Thus, fields must always include\n\t\t// the ID.\n\t\tquery = {\n\t\t\t...query,\n\t\t\t_fields: uniq( [\n\t\t\t\t...( getNormalizedCommaSeparable( query._fields ) || [] ),\n\t\t\t\tentity.key || DEFAULT_ENTITY_KEY,\n\t\t\t] ).join(),\n\t\t};\n\t}\n\n\tconst path = addQueryArgs( entity.baseURL, {\n\t\t...query,\n\t\tcontext: 'edit',\n\t} );\n\n\tlet records = Object.values( yield apiFetch( { path } ) );\n\t// If we request fields but the result doesn't contain the fields,\n\t// explicitely set these fields as \"undefined\"\n\t// that way we consider the query \"fullfilled\".\n\tif ( query._fields ) {\n\t\trecords = records.map( ( record ) => {\n\t\t\tquery._fields.split( ',' ).forEach( ( field ) => {\n\t\t\t\tif ( ! record.hasOwnProperty( field ) ) {\n\t\t\t\t\trecord[ field ] = undefined;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn record;\n\t\t} );\n\t}\n\n\tyield receiveEntityRecords( kind, name, records, query );\n}\n\ngetEntityRecords.shouldInvalidate = ( action, kind, name ) => {\n\treturn (\n\t\t( action.type === 'RECEIVE_ITEMS' || action.type === 'REMOVE_ITEMS' ) &&\n\t\taction.invalidateCache &&\n\t\tkind === action.kind &&\n\t\tname === action.name\n\t);\n};\n\n/**\n * Requests the current theme.\n */\nexport function* getCurrentTheme() {\n\tconst activeThemes = yield apiFetch( {\n\t\tpath: '/wp/v2/themes?status=active',\n\t} );\n\tyield receiveCurrentTheme( activeThemes[ 0 ] );\n}\n\n/**\n * Requests theme supports data from the index.\n */\nexport function* getThemeSupports() {\n\tconst activeThemes = yield apiFetch( {\n\t\tpath: '/wp/v2/themes?status=active',\n\t} );\n\tyield receiveThemeSupports( activeThemes[ 0 ].theme_supports );\n}\n\n/**\n * Requests a preview from the from the Embed API.\n *\n * @param {string} url   URL to get the preview for.\n */\nexport function* getEmbedPreview( url ) {\n\ttry {\n\t\tconst embedProxyResponse = yield apiFetch( {\n\t\t\tpath: addQueryArgs( '/oembed/1.0/proxy', { url } ),\n\t\t} );\n\t\tyield receiveEmbedPreview( url, embedProxyResponse );\n\t} catch ( error ) {\n\t\t// Embed API 404s if the URL cannot be embedded, so we have to catch the error from the apiRequest here.\n\t\tyield receiveEmbedPreview( url, false );\n\t}\n}\n\n/**\n * Requests Upload Permissions from the REST API.\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *            `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n */\nexport function* hasUploadPermissions() {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\tyield* canUser( 'create', 'media' );\n}\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}  action   Action to check. One of: 'create', 'read', 'update',\n *                           'delete'.\n * @param {string}  resource REST resource to check, e.g. 'media' or 'posts'.\n * @param {?string} id       ID of the rest resource to check.\n */\nexport function* canUser( action, resource, id ) {\n\tconst methods = {\n\t\tcreate: 'POST',\n\t\tread: 'GET',\n\t\tupdate: 'PUT',\n\t\tdelete: 'DELETE',\n\t};\n\n\tconst method = methods[ action ];\n\tif ( ! method ) {\n\t\tthrow new Error( `'${ action }' is not a valid action.` );\n\t}\n\n\tconst path = id ? `/wp/v2/${ resource }/${ id }` : `/wp/v2/${ resource }`;\n\n\tlet response;\n\ttry {\n\t\tresponse = yield apiFetch( {\n\t\t\tpath,\n\t\t\t// Ideally this would always be an OPTIONS request, but unfortunately there's\n\t\t\t// a bug in the REST API which causes the Allow header to not be sent on\n\t\t\t// OPTIONS requests to /posts/:id routes.\n\t\t\t// https://core.trac.wordpress.org/ticket/45753\n\t\t\tmethod: id ? 'GET' : 'OPTIONS',\n\t\t\tparse: false,\n\t\t} );\n\t} catch ( error ) {\n\t\t// Do nothing if our OPTIONS request comes back with an API error (4xx or\n\t\t// 5xx). The previously determined isAllowed value will remain in the store.\n\t\treturn;\n\t}\n\n\tlet allowHeader;\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\tallowHeader = response.headers.get( 'allow' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\tallowHeader = get( response, [ 'headers', 'Allow' ], '' );\n\t}\n\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\tconst isAllowed = includes( allowHeader, method );\n\tyield receiveUserPermission( key, isAllowed );\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosaves( postType, postId ) {\n\tconst { rest_base: restBase } = yield select(\n\t\t'core',\n\t\t'getPostType',\n\t\tpostType\n\t);\n\tconst autosaves = yield apiFetch( {\n\t\tpath: `/wp/v2/${ restBase }/${ postId }/autosaves?context=edit`,\n\t} );\n\n\tif ( autosaves && autosaves.length ) {\n\t\tyield receiveAutosaves( postId, autosaves );\n\t}\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * This resolver exists to ensure the underlying autosaves are fetched via\n * `getAutosaves` when a call to the `getAutosave` selector is made.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosave( postType, postId ) {\n\tyield select( 'core', 'getAutosaves', postType, postId );\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { set, map, find, get, filter, compact, defaultTo } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { REDUCER_KEY } from './name';\nimport { getQueriedItems } from './queried-data';\nimport { DEFAULT_ENTITY_KEY } from './entities';\nimport { getNormalizedCommaSeparable } from './utils';\n\n/**\n * Returns true if a request is in progress for embed preview data, or false\n * otherwise.\n *\n * @param {Object} state Data state.\n * @param {string} url   URL the preview would be for.\n *\n * @return {boolean} Whether a request is in progress for an embed preview.\n */\nexport const isRequestingEmbedPreview = createRegistrySelector(\n\t( select ) => ( state, url ) => {\n\t\treturn select( 'core/data' ).isResolving(\n\t\t\tREDUCER_KEY,\n\t\t\t'getEmbedPreview',\n\t\t\t[ url ]\n\t\t);\n\t}\n);\n\n/**\n * Returns all available authors.\n *\n * @param {Object}           state Data state.\n * @param {Object|undefined} query Optional object of query parameters to\n *                                 include with request.\n * @return {Array} Authors list.\n */\nexport function getAuthors( state, query ) {\n\tconst path = addQueryArgs(\n\t\t'/wp/v2/users/?who=authors&per_page=100',\n\t\tquery\n\t);\n\treturn getUserQueryResults( state, path );\n}\n\n/**\n * Returns all available authors.\n *\n * @param {Object} state Data state.\n * @param {number} id The author id.\n *\n * @return {Array} Authors list.\n */\nexport function __unstableGetAuthor( state, id ) {\n\treturn get( state, [ 'users', 'byId', id ], null );\n}\n\n/**\n * Returns the current user.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} Current user object.\n */\nexport function getCurrentUser( state ) {\n\treturn state.currentUser;\n}\n\n/**\n * Returns all the users returned by a query ID.\n *\n * @param {Object} state   Data state.\n * @param {string} queryID Query ID.\n *\n * @return {Array} Users list.\n */\nexport const getUserQueryResults = createSelector(\n\t( state, queryID ) => {\n\t\tconst queryResults = state.users.queries[ queryID ];\n\n\t\treturn map( queryResults, ( id ) => state.users.byId[ id ] );\n\t},\n\t( state, queryID ) => [ state.users.queries[ queryID ], state.users.byId ]\n);\n\n/**\n * Returns whether the entities for the give kind are loaded.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n *\n * @return {boolean} Whether the entities are loaded\n */\nexport function getEntitiesByKind( state, kind ) {\n\treturn filter( state.entities.config, { kind } );\n}\n\n/**\n * Returns the entity object given its kind and name.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n *\n * @return {Object} Entity\n */\nexport function getEntity( state, kind, name ) {\n\treturn find( state.entities.config, { kind, name } );\n}\n\n/**\n * Returns the Entity's record object by key. Returns `null` if the value is not\n * yet received, undefined if the value entity is known to not exist, or the\n * entity object if it exists and is received.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {number}  key   Record's key\n * @param {?Object} query Optional query.\n *\n * @return {Object?} Record.\n */\nexport function getEntityRecord( state, kind, name, key, query ) {\n\tconst queriedState = get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'queriedData',\n\t] );\n\tif ( ! queriedState ) {\n\t\treturn undefined;\n\t}\n\n\tif ( query === undefined ) {\n\t\t// If expecting a complete item, validate that completeness.\n\t\tif ( ! queriedState.itemIsComplete[ key ] ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn queriedState.items[ key ];\n\t}\n\n\tconst item = queriedState.items[ key ];\n\tif ( item && query._fields ) {\n\t\tconst filteredItem = {};\n\t\tconst fields = getNormalizedCommaSeparable( query._fields );\n\t\tfor ( let f = 0; f < fields.length; f++ ) {\n\t\t\tconst field = fields[ f ].split( '.' );\n\t\t\tconst value = get( item, field );\n\t\t\tset( filteredItem, field, value );\n\t\t}\n\t\treturn filteredItem;\n\t}\n\n\treturn item;\n}\n\n/**\n * Returns the Entity's record object by key. Doesn't trigger a resolver nor requests the entity from the API if the entity record isn't available in the local state.\n *\n * @param {Object} state  State tree\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n *\n * @return {Object|null} Record.\n */\nexport function __experimentalGetEntityRecordNoResolver(\n\tstate,\n\tkind,\n\tname,\n\tkey\n) {\n\treturn getEntityRecord( state, kind, name, key );\n}\n\n/**\n * Returns the entity's record object by key,\n * with its attributes mapped to their raw values.\n *\n * @param {Object} state  State tree.\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key.\n *\n * @return {Object?} Object with the entity's raw attributes.\n */\nexport const getRawEntityRecord = createSelector(\n\t( state, kind, name, key ) => {\n\t\tconst record = getEntityRecord( state, kind, name, key );\n\t\treturn (\n\t\t\trecord &&\n\t\t\tObject.keys( record ).reduce( ( accumulator, _key ) => {\n\t\t\t\t// Because edits are the \"raw\" attribute values,\n\t\t\t\t// we return those from record selectors to make rendering,\n\t\t\t\t// comparisons, and joins with edits easier.\n\t\t\t\taccumulator[ _key ] = get(\n\t\t\t\t\trecord[ _key ],\n\t\t\t\t\t'raw',\n\t\t\t\t\trecord[ _key ]\n\t\t\t\t);\n\t\t\t\treturn accumulator;\n\t\t\t}, {} )\n\t\t);\n\t},\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns true if records have been received for the given set of parameters,\n * or false otherwise.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {?Object} query Optional terms query.\n *\n * @return {boolean} Whether entity records have been received.\n */\nexport function hasEntityRecords( state, kind, name, query ) {\n\treturn Array.isArray( getEntityRecords( state, kind, name, query ) );\n}\n\n/**\n * Returns the Entity's records.\n *\n * @param {Object}  state State tree\n * @param {string}  kind  Entity kind.\n * @param {string}  name  Entity name.\n * @param {?Object} query Optional terms query.\n *\n * @return {?Array} Records.\n */\nexport function getEntityRecords( state, kind, name, query ) {\n\t// Queried data state is prepopulated for all known entities. If this is not\n\t// assigned for the given parameters, then it is known to not exist. Thus, a\n\t// return value of an empty array is used instead of `null` (where `null` is\n\t// otherwise used to represent an unknown state).\n\tconst queriedState = get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'queriedData',\n\t] );\n\tif ( ! queriedState ) {\n\t\treturn [];\n\t}\n\treturn getQueriedItems( queriedState, query );\n}\n\n/**\n * Returns the  list of dirty entity records.\n *\n * @param {Object} state State tree.\n *\n * @return {[{ title: string, key: string, name: string, kind: string }]} The list of updated records\n */\nexport const __experimentalGetDirtyEntityRecords = createSelector(\n\t( state ) => {\n\t\tconst {\n\t\t\tentities: { data },\n\t\t} = state;\n\t\tconst dirtyRecords = [];\n\t\tObject.keys( data ).forEach( ( kind ) => {\n\t\t\tObject.keys( data[ kind ] ).forEach( ( name ) => {\n\t\t\t\tconst primaryKeys = Object.keys(\n\t\t\t\t\tdata[ kind ][ name ].edits\n\t\t\t\t).filter( ( primaryKey ) =>\n\t\t\t\t\thasEditsForEntityRecord( state, kind, name, primaryKey )\n\t\t\t\t);\n\n\t\t\t\tif ( primaryKeys.length ) {\n\t\t\t\t\tconst entity = getEntity( state, kind, name );\n\t\t\t\t\tprimaryKeys.forEach( ( primaryKey ) => {\n\t\t\t\t\t\tconst entityRecord = getEditedEntityRecord(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tprimaryKey\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdirtyRecords.push( {\n\t\t\t\t\t\t\t// We avoid using primaryKey because it's transformed into a string\n\t\t\t\t\t\t\t// when it's used as an object key.\n\t\t\t\t\t\t\tkey:\n\t\t\t\t\t\t\t\tentityRecord[\n\t\t\t\t\t\t\t\t\tentity.key || DEFAULT_ENTITY_KEY\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttitle: ! entity.getTitle\n\t\t\t\t\t\t\t\t? ''\n\t\t\t\t\t\t\t\t: entity.getTitle( entityRecord ),\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn dirtyRecords;\n\t},\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns the specified entity record's edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's edits.\n */\nexport function getEntityRecordEdits( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [ kind, name, 'edits', recordId ] );\n}\n\n/**\n * Returns the specified entity record's non transient edits.\n *\n * Transient edits don't create an undo level, and\n * are not considered for change detection.\n * They are defined in the entity's config.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's non transient edits.\n */\nexport const getEntityRecordNonTransientEdits = createSelector(\n\t( state, kind, name, recordId ) => {\n\t\tconst { transientEdits } = getEntity( state, kind, name ) || {};\n\t\tconst edits = getEntityRecordEdits( state, kind, name, recordId ) || {};\n\t\tif ( ! transientEdits ) {\n\t\t\treturn edits;\n\t\t}\n\t\treturn Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tif ( ! transientEdits[ key ] ) {\n\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state ) => [ state.entities.config, state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record has edits,\n * and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record has edits or not.\n */\nexport function hasEditsForEntityRecord( state, kind, name, recordId ) {\n\treturn (\n\t\tisSavingEntityRecord( state, kind, name, recordId ) ||\n\t\tObject.keys(\n\t\t\tgetEntityRecordNonTransientEdits( state, kind, name, recordId )\n\t\t).length > 0\n\t);\n}\n\n/**\n * Returns the specified entity record, merged with its edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record, merged with its edits.\n */\nexport const getEditedEntityRecord = createSelector(\n\t( state, kind, name, recordId ) => ( {\n\t\t...getRawEntityRecord( state, kind, name, recordId ),\n\t\t...getEntityRecordEdits( state, kind, name, recordId ),\n\t} ),\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record is autosaving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is autosaving or not.\n */\nexport function isAutosavingEntityRecord( state, kind, name, recordId ) {\n\tconst { pending, isAutosave } = get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId ],\n\t\t{}\n\t);\n\treturn Boolean( pending && isAutosave );\n}\n\n/**\n * Returns true if the specified entity record is saving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is saving or not.\n */\nexport function isSavingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns true if the specified entity record is deleting, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is deleting or not.\n */\nexport function isDeletingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'deleting', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns the specified entity record's last save error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntitySaveError( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'saving',\n\t\trecordId,\n\t\t'error',\n\t] );\n}\n\n/**\n * Returns the specified entity record's last delete error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntityDeleteError( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [\n\t\tkind,\n\t\tname,\n\t\t'deleting',\n\t\trecordId,\n\t\t'error',\n\t] );\n}\n\n/**\n * Returns the current undo offset for the\n * entity records edits history. The offset\n * represents how many items from the end\n * of the history stack we are at. 0 is the\n * last edit, -1 is the second last, and so on.\n *\n * @param {Object} state State tree.\n *\n * @return {number} The current undo offset.\n */\nfunction getCurrentUndoOffset( state ) {\n\treturn state.undo.offset;\n}\n\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getUndoEdit( state ) {\n\treturn state.undo[ state.undo.length - 2 + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns the next edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getRedoEdit( state ) {\n\treturn state.undo[ state.undo.length + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns true if there is a previous edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a previous edit or not.\n */\nexport function hasUndo( state ) {\n\treturn Boolean( getUndoEdit( state ) );\n}\n\n/**\n * Returns true if there is a next edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a next edit or not.\n */\nexport function hasRedo( state ) {\n\treturn Boolean( getRedoEdit( state ) );\n}\n\n/**\n * Return the current theme.\n *\n * @param {Object} state Data state.\n *\n * @return {Object}      The current theme.\n */\nexport function getCurrentTheme( state ) {\n\treturn state.themes[ state.currentTheme ];\n}\n\n/**\n * Return theme supports data in the index.\n *\n * @param {Object} state Data state.\n *\n * @return {*}           Index data.\n */\nexport function getThemeSupports( state ) {\n\treturn state.themeSupports;\n}\n\n/**\n * Returns the embed preview for the given URL.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {*} Undefined if the preview has not been fetched, otherwise, the preview fetched from the embed preview API.\n */\nexport function getEmbedPreview( state, url ) {\n\treturn state.embedPreviews[ url ];\n}\n\n/**\n * Determines if the returned preview is an oEmbed link fallback.\n *\n * WordPress can be configured to return a simple link to a URL if it is not embeddable.\n * We need to be able to determine if a URL is embeddable or not, based on what we\n * get back from the oEmbed preview API.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {boolean} Is the preview for the URL an oEmbed link fallback.\n */\nexport function isPreviewEmbedFallback( state, url ) {\n\tconst preview = state.embedPreviews[ url ];\n\tconst oEmbedLinkCheck = '<a href=\"' + url + '\">' + url + '</a>';\n\tif ( ! preview ) {\n\t\treturn false;\n\t}\n\treturn preview.html === oEmbedLinkCheck;\n}\n\n/**\n * Returns whether the current user can upload media.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *             `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n *\n * @param {Object} state Data state.\n *\n * @return {boolean} Whether or not the user can upload media. Defaults to `true` if the OPTIONS\n *                   request is being made.\n */\nexport function hasUploadPermissions( state ) {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\treturn defaultTo( canUser( state, 'create', 'media' ), true );\n}\n\n/**\n * Returns whether the current user can perform the given action on the given\n * REST resource.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param {Object}   state            Data state.\n * @param {string}   action           Action to check. One of: 'create', 'read', 'update', 'delete'.\n * @param {string}   resource         REST resource to check, e.g. 'media' or 'posts'.\n * @param {string=}  id               Optional ID of the rest resource to check.\n *\n * @return {boolean|undefined} Whether or not the user can perform the action,\n *                             or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUser( state, action, resource, id ) {\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\treturn get( state, [ 'userPermissions', key ] );\n}\n\n/**\n * Returns the latest autosaves for the post.\n *\n * May return multiple autosaves since the backend stores one autosave per\n * author for each post.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {?Array} An array of autosaves for the post, or undefined if there is none.\n */\nexport function getAutosaves( state, postType, postId ) {\n\treturn state.autosaves[ postId ];\n}\n\n/**\n * Returns the autosave for the post and author.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n * @param {number} authorId The id of the author.\n *\n * @return {?Object} The autosave for the post and author.\n */\nexport function getAutosave( state, postType, postId, authorId ) {\n\tif ( authorId === undefined ) {\n\t\treturn;\n\t}\n\n\tconst autosaves = state.autosaves[ postId ];\n\treturn find( autosaves, { author: authorId } );\n}\n\n/**\n * Returns true if the REST request for autosaves has completed.\n *\n * @param {Object} state State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {boolean} True if the REST request was completed. False otherwise.\n */\nexport const hasFetchedAutosaves = createRegistrySelector(\n\t( select ) => ( state, postType, postId ) => {\n\t\treturn select( REDUCER_KEY ).hasFinishedResolution( 'getAutosaves', [\n\t\t\tpostType,\n\t\t\tpostId,\n\t\t] );\n\t}\n);\n\n/**\n * Returns a new reference when edited values have changed. This is useful in\n * inferring where an edit has been made between states by comparison of the\n * return values using strict equality.\n *\n * @example\n *\n * ```\n * const hasEditOccurred = (\n *    getReferenceByDistinctEdits( beforeState ) !==\n *    getReferenceByDistinctEdits( afterState )\n * );\n * ```\n *\n * @param {Object} state Editor state.\n *\n * @return {*} A value whose reference will change only when an edit occurs.\n */\nexport const getReferenceByDistinctEdits = createSelector(\n\t() => [],\n\t( state ) => [\n\t\tstate.undo.length,\n\t\tstate.undo.offset,\n\t\tstate.undo.flattenedUndo,\n\t]\n);\n","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * Given the current and next item entity, returns the minimally \"modified\"\n * result of the next item, preferring value references from the original item\n * if equal. If all values match, the original item is returned.\n *\n * @param {Object} item     Original item.\n * @param {Object} nextItem Next item.\n *\n * @return {Object} Minimally modified merged item.\n */\nexport default function conservativeMapItem( item, nextItem ) {\n\t// Return next item in its entirety if there is no original item.\n\tif ( ! item ) {\n\t\treturn nextItem;\n\t}\n\n\tlet hasChanges = false;\n\tconst result = {};\n\tfor ( const key in nextItem ) {\n\t\tif ( isEqual( item[ key ], nextItem[ key ] ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t} else {\n\t\t\thasChanges = true;\n\t\t\tresult[ key ] = nextItem[ key ];\n\t\t}\n\t}\n\n\tif ( ! hasChanges ) {\n\t\treturn item;\n\t}\n\n\t// Only at this point, backfill properties from the original item which\n\t// weren't explicitly set into the result above. This is an optimization\n\t// to allow `hasChanges` to return early.\n\tfor ( const key in item ) {\n\t\tif ( ! result.hasOwnProperty( key ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * Given a value which can be specified as one or the other of a comma-separated\n * string or an array, returns a value normalized to an array of strings, or\n * null if the value cannot be interpreted as either.\n *\n * @param {string|string[]|*} value\n *\n * @return {?(string[])} Normalized field value.\n */\nfunction getNormalizedCommaSeparable( value ) {\n\tif ( typeof value === 'string' ) {\n\t\treturn value.split( ',' );\n\t} else if ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn null;\n}\n\nexport default getNormalizedCommaSeparable;\n","/**\n * A higher-order reducer creator which invokes the original reducer only if\n * the dispatching action matches the given predicate, **OR** if state is\n * initializing (undefined).\n *\n * @param {Function} isMatch Function predicate for allowing reducer call.\n *\n * @return {Function} Higher-order reducer.\n */\nconst ifMatchingAction = ( isMatch ) => ( reducer ) => ( state, action ) => {\n\tif ( state === undefined || isMatch( action ) ) {\n\t\treturn reducer( state, action );\n\t}\n\n\treturn state;\n};\n\nexport default ifMatchingAction;\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data-controls';\n\n/**\n * Higher-order function which invokes the given resolver only if it has not\n * already been resolved with the arguments passed to the enhanced function.\n *\n * This only considers resolution state, and notably does not support resolver\n * custom `isFulfilled` behavior.\n *\n * @param {Function} resolver     Original resolver.\n * @param {string}   selectorName Selector name associated with resolver.\n *\n * @return {Function} Enhanced resolver.\n */\nconst ifNotResolved = ( resolver, selectorName ) =>\n\t/**\n\t * @param {...any} args Original resolver arguments.\n\t */\n\tfunction* resolveIfNotResolved( ...args ) {\n\t\tconst hasStartedResolution = yield select(\n\t\t\t'core',\n\t\t\t'hasStartedResolution',\n\t\t\tselectorName,\n\t\t\targs\n\t\t);\n\n\t\tif ( ! hasStartedResolution ) {\n\t\t\tyield* resolver( ...args );\n\t\t}\n\t};\n\nexport default ifNotResolved;\n","export { default as conservativeMapItem } from './conservative-map-item';\nexport { default as getNormalizedCommaSeparable } from './get-normalized-comma-separable';\nexport { default as ifMatchingAction } from './if-matching-action';\nexport { default as ifNotResolved } from './if-not-resolved';\nexport { default as onSubKey } from './on-sub-key';\nexport { default as replaceAction } from './replace-action';\nexport { default as withWeakMapCache } from './with-weak-map-cache';\n","/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param {string} actionProperty Action property by which to key object.\n *\n * @return {Function} Higher-order reducer.\n */\nexport const onSubKey = ( actionProperty ) => ( reducer ) => (\n\tstate = {},\n\taction\n) => {\n\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t// where reducer is scoped by action shape.\n\tconst key = action[ actionProperty ];\n\tif ( key === undefined ) {\n\t\treturn state;\n\t}\n\n\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t// reducer which returns undefined on a key which is not yet tracked.\n\tconst nextKeyState = reducer( state[ key ], action );\n\tif ( nextKeyState === state[ key ] ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ key ]: nextKeyState,\n\t};\n};\n\nexport default onSubKey;\n","/**\n * Higher-order reducer creator which substitutes the action object before\n * passing to the original reducer.\n *\n * @param {Function} replacer Function mapping original action to replacement.\n *\n * @return {Function} Higher-order reducer.\n */\nconst replaceAction = ( replacer ) => ( reducer ) => ( state, action ) => {\n\treturn reducer( state, replacer( action ) );\n};\n\nexport default replaceAction;\n","/**\n * External dependencies\n */\nimport { isObjectLike } from 'lodash';\n\n/**\n * Given a function, returns an enhanced function which caches the result and\n * tracks in WeakMap. The result is only cached if the original function is\n * passed a valid object-like argument (requirement for WeakMap key).\n *\n * @param {Function} fn Original function.\n *\n * @return {Function} Enhanced caching function.\n */\nfunction withWeakMapCache( fn ) {\n\tconst cache = new WeakMap();\n\n\treturn ( key ) => {\n\t\tlet value;\n\t\tif ( cache.has( key ) ) {\n\t\t\tvalue = cache.get( key );\n\t\t} else {\n\t\t\tvalue = fn( key );\n\n\t\t\t// Can reach here if key is not valid for WeakMap, since `has`\n\t\t\t// will return false for invalid key. Since `set` will throw,\n\t\t\t// ensure that key is valid before setting into cache.\n\t\t\tif ( isObjectLike( key ) ) {\n\t\t\t\tcache.set( key, value );\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n}\n\nexport default withWeakMapCache;\n","'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","(function() { module.exports = this[\"regeneratorRuntime\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"dataControls\"]; }());","(function() { module.exports = this[\"wp\"][\"deprecated\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());","(function() { module.exports = this[\"wp\"][\"isShallowEqual\"]; }());","(function() { module.exports = this[\"wp\"][\"url\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}