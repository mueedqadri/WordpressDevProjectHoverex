{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/@wordpress/wordcount/src/defaultSettings.js","webpack://wp/@wordpress/wordcount/src/index.js","webpack://wp/@wordpress/wordcount/src/stripConnectors.js","webpack://wp/@wordpress/wordcount/src/stripHTMLComments.js","webpack://wp/@wordpress/wordcount/src/stripHTMLEntities.js","webpack://wp/@wordpress/wordcount/src/stripRemovables.js","webpack://wp/@wordpress/wordcount/src/stripShortcodes.js","webpack://wp/@wordpress/wordcount/src/stripSpaces.js","webpack://wp/@wordpress/wordcount/src/stripTags.js","webpack://wp/@wordpress/wordcount/src/transposeAstralsToCountableChar.js","webpack://wp/@wordpress/wordcount/src/transposeHTMLEntitiesToCountableChars.js","webpack://wp/external {\"this\":\"lodash\"}"],"names":["defaultSettings","HTMLRegExp","HTMLcommentRegExp","spaceRegExp","HTMLEntityRegExp","connectorRegExp","removeRegExp","RegExp","join","astralRegExp","wordsRegExp","characters_excluding_spacesRegExp","characters_including_spacesRegExp","l10n","type","loadSettings","userSettings","settings","extend","shortcodes","length","shortcodesRegExp","countWords","text","regex","flow","stripTags","bind","stripHTMLComments","stripShortcodes","stripSpaces","stripHTMLEntities","stripConnectors","stripRemovables","match","countCharacters","transposeAstralsToCountableChar","transposeHTMLEntitiesToCountableChars","count","matchRegExp","replace"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;;;AAMA;;AACA;;AACA;;;;;;AAKA;AAEO,IAAMA,eAAe,GAAG;AAC9BC,YAAU,EAAE,oBADkB;AAE9BC,mBAAiB,EAAE,kBAFW;AAG9BC,aAAW,EAAE,iBAHiB;AAI9BC,kBAAgB,EAAE,SAJY;AAM9B;AACAC,iBAAe,EAAE,YAPa;AAS9B;AACAC,cAAY,EAAE,IAAIC,MAAJ,CACb,CACC,GADD,EAGC;AACA,aAJD,EAMC;AACA,qBAPD;AASC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,iBApCD,EAsCC;AACA,iBAvCD,EAwCC,GAxCD,EAyCEC,IAzCF,CAyCQ,EAzCR,CADa,EA2Cb,GA3Ca,CAVgB;AAwD9B;AACAC,cAAY,EAAE,iCAzDgB;AA0D9BC,aAAW,EAAE,QA1DiB;AA2D9BC,mCAAiC,EAAE,KA3DL;;AA6D9B;;;;;;;;;;;AAWAC,mCAAiC,EAAE,kCAxEL;AAyE9BC,MAAI,EAAE;AACLC,QAAI,EAAE;AADD;AAzEwB,CAAxB;;;;;;;;;;;;;ACrCP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAGA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;;;;;;AAMA;;;;;;;;;AAQA,SAASC,YAAT,CAAuBD,IAAvB,EAA6BE,YAA7B,EAA4C;AAAA;;AAC3C,MAAMC,QAAQ,GAAGC,qDAAM,CAAE,EAAF,EAAMlB,gEAAN,EAAuBgB,YAAvB,CAAvB;AAEAC,UAAQ,CAACE,UAAT,8CAAsBF,QAAQ,CAACJ,IAA/B,mDAAsB,eAAeM,UAArC,yEAAmD,EAAnD;;AAEA,MAAKF,QAAQ,CAACE,UAAT,IAAuBF,QAAQ,CAACE,UAAT,CAAoBC,MAAhD,EAAyD;AACxDH,YAAQ,CAACI,gBAAT,GAA4B,IAAId,MAAJ,CAC3B,eAAeU,QAAQ,CAACE,UAAT,CAAoBX,IAApB,CAA0B,GAA1B,CAAf,GAAiD,cADtB,EAE3B,GAF2B,CAA5B;AAIA;;AAEDS,UAAQ,CAACH,IAAT,GAAgBA,IAAhB;;AAEA,MACCG,QAAQ,CAACH,IAAT,KAAkB,6BAAlB,IACAG,QAAQ,CAACH,IAAT,KAAkB,6BAFnB,EAGE;AACDG,YAAQ,CAACH,IAAT,GAAgB,OAAhB;AACA;;AAED,SAAOG,QAAP;AACA;AAED;;;;;;;;;;;AASA,SAASK,UAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkCP,QAAlC,EAA6C;AAAA;;AAC5CM,MAAI,GAAGE,mDAAI,CACVC,kDAAS,CAACC,IAAV,CAAgB,IAAhB,EAAsBV,QAAtB,CADU,EAEVW,0DAAiB,CAACD,IAAlB,CAAwB,IAAxB,EAA8BV,QAA9B,CAFU,EAGVY,wDAAe,CAACF,IAAhB,CAAsB,IAAtB,EAA4BV,QAA5B,CAHU,EAIVa,oDAAW,CAACH,IAAZ,CAAkB,IAAlB,EAAwBV,QAAxB,CAJU,EAKVc,0DAAiB,CAACJ,IAAlB,CAAwB,IAAxB,EAA8BV,QAA9B,CALU,EAMVe,wDAAe,CAACL,IAAhB,CAAsB,IAAtB,EAA4BV,QAA5B,CANU,EAOVgB,wDAAe,CAACN,IAAhB,CAAsB,IAAtB,EAA4BV,QAA5B,CAPU,CAAJ,CAQJM,IARI,CAAP;AASAA,MAAI,GAAGA,IAAI,GAAG,IAAd;AACA,8CAAOA,IAAI,CAACW,KAAL,CAAYV,KAAZ,CAAP,gDAAO,YAAqBJ,MAA5B,mEAAsC,CAAtC;AACA;AAED;;;;;;;;;;;AASA,SAASe,eAAT,CAA0BZ,IAA1B,EAAgCC,KAAhC,EAAuCP,QAAvC,EAAkD;AAAA;;AACjDM,MAAI,GAAGE,mDAAI,CACVC,kDAAS,CAACC,IAAV,CAAgB,IAAhB,EAAsBV,QAAtB,CADU,EAEVW,0DAAiB,CAACD,IAAlB,CAAwB,IAAxB,EAA8BV,QAA9B,CAFU,EAGVY,wDAAe,CAACF,IAAhB,CAAsB,IAAtB,EAA4BV,QAA5B,CAHU,EAIVmB,wEAA+B,CAACT,IAAhC,CAAsC,IAAtC,EAA4CV,QAA5C,CAJU,EAKVa,oDAAW,CAACH,IAAZ,CAAkB,IAAlB,EAAwBV,QAAxB,CALU,EAMVoB,+EAAqC,CAACV,IAAtC,CAA4C,IAA5C,EAAkDV,QAAlD,CANU,CAAJ,CAOJM,IAPI,CAAP;AAQAA,MAAI,GAAGA,IAAI,GAAG,IAAd;AACA,gDAAOA,IAAI,CAACW,KAAL,CAAYV,KAAZ,CAAP,iDAAO,aAAqBJ,MAA5B,qEAAsC,CAAtC;AACA;AAED;;;;;;;;;;;;;;;;;AAeO,SAASkB,KAAT,CAAgBf,IAAhB,EAAsBT,IAAtB,EAA4BE,YAA5B,EAA2C;AACjD,MAAMC,QAAQ,GAAGF,YAAY,CAAED,IAAF,EAAQE,YAAR,CAA7B;AACA,MAAIuB,WAAJ;;AACA,UAAStB,QAAQ,CAACH,IAAlB;AACC,SAAK,OAAL;AACCyB,iBAAW,GAAGtB,QAAQ,CAACP,WAAvB;AACA,aAAOY,UAAU,CAAEC,IAAF,EAAQgB,WAAR,EAAqBtB,QAArB,CAAjB;;AACD,SAAK,6BAAL;AACCsB,iBAAW,GAAGtB,QAAQ,CAACL,iCAAvB;AACA,aAAOuB,eAAe,CAAEZ,IAAF,EAAQgB,WAAR,EAAqBtB,QAArB,CAAtB;;AACD,SAAK,6BAAL;AACCsB,iBAAW,GAAGtB,QAAQ,CAACN,iCAAvB;AACA,aAAOwB,eAAe,CAAEZ,IAAF,EAAQgB,WAAR,EAAqBtB,QAArB,CAAtB;;AACD;AACC,aAAO,CAAP;AAXF;AAaA;;;;;;;;;;;;;AC1ID;AAAA;AAAA;;;;;;;;AAQe,SAASe,eAAT,CAA0Bf,QAA1B,EAAoCM,IAApC,EAA2C;AACzD,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACZ,eAAvB,EAAwC,GAAxC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAASuB,iBAAT,CAA4BX,QAA5B,EAAsCM,IAAtC,EAA6C;AAC3D,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACf,iBAAvB,EAA0C,EAA1C,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAAS6B,iBAAT,CAA4Bd,QAA5B,EAAsCM,IAAtC,EAA6C;AAC3D,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACb,gBAAvB,EAAyC,EAAzC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAAS6B,eAAT,CAA0BhB,QAA1B,EAAoCM,IAApC,EAA2C;AACzD,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACX,YAAvB,EAAqC,EAArC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAASuB,eAAT,CAA0BZ,QAA1B,EAAoCM,IAApC,EAA2C;AACzD,MAAKN,QAAQ,CAACI,gBAAd,EAAiC;AAChC,WAAOE,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACI,gBAAvB,EAAyC,IAAzC,CAAP;AACA;;AACD,SAAOE,IAAP;AACA;;;;;;;;;;;;;ACbD;AAAA;AAAA;;;;;;;;AAQe,SAASO,WAAT,CAAsBb,QAAtB,EAAgCM,IAAhC,EAAuC;AACrD,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACd,WAAvB,EAAoC,GAApC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAASuB,SAAT,CAAoBT,QAApB,EAA8BM,IAA9B,EAAqC;AACnD,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAAChB,UAAvB,EAAmC,IAAnC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAASmC,+BAAT,CAA0CnB,QAA1C,EAAoDM,IAApD,EAA2D;AACzE,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACR,YAAvB,EAAqC,GAArC,CAAP;AACA;;;;;;;;;;;;;ACVD;AAAA;AAAA;;;;;;;;AAQe,SAAS4B,qCAAT,CACdpB,QADc,EAEdM,IAFc,EAGb;AACD,SAAOA,IAAI,CAACiB,OAAL,CAAcvB,QAAQ,CAACb,gBAAvB,EAAyC,GAAzC,CAAP;AACA;;;;;;;;;;;;ACbD,aAAa,iCAAiC,EAAE,I","file":"wordcount.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/@wordpress/wordcount/build-module/index.js\");\n","/** @typedef {import('./index').WPWordCountStrategy} WPWordCountStrategy */\n\n/** @typedef {Partial<{type: WPWordCountStrategy, shortcodes: string[]}>} WPWordCountL10n */\n\n/**\n * @typedef WPWordCountSettingsFields\n * @property {RegExp}              HTMLRegExp                        Regular expression that matches HTML tags\n * @property {RegExp}              HTMLcommentRegExp                 Regular expression that matches HTML comments\n * @property {RegExp}              spaceRegExp                       Regular expression that matches spaces in HTML\n * @property {RegExp}              HTMLEntityRegExp                  Regular expression that matches HTML entities\n * @property {RegExp}              connectorRegExp                   Regular expression that matches word connectors, like em-dash\n * @property {RegExp}              removeRegExp                      Regular expression that matches various characters to be removed when counting\n * @property {RegExp}              astralRegExp                      Regular expression that matches astral UTF-16 code points\n * @property {RegExp}              wordsRegExp                       Regular expression that matches words\n * @property {RegExp}              characters_excluding_spacesRegExp Regular expression that matches characters excluding spaces\n * @property {RegExp}              characters_including_spacesRegExp Regular expression that matches characters including spaces\n * @property {RegExp}              shortcodesRegExp                  Regular expression that matches WordPress shortcodes\n * @property {string[]}            shortcodes                        List of all shortcodes\n * @property {WPWordCountStrategy} type                              Describes what and how are we counting\n * @property {WPWordCountL10n}     l10n                              Object with human translations\n */\n\n/**\n * Lower-level settings for word counting that can be overridden.\n *\n * @typedef {Partial<WPWordCountSettingsFields>} WPWordCountUserSettings\n */\n\n// Disable reason: JSDoc linter doesn't seem to parse the union (`&`) correctly: https://github.com/jsdoc/jsdoc/issues/1285\n/* eslint-disable jsdoc/valid-types */\n/**\n * Word counting settings that include non-optional values we set if missing\n *\n * @typedef {WPWordCountUserSettings & typeof defaultSettings} WPWordCountDefaultSettings\n */\n/* eslint-enable jsdoc/valid-types */\n\nexport const defaultSettings = {\n\tHTMLRegExp: /<\\/?[a-z][^>]*?>/gi,\n\tHTMLcommentRegExp: /<!--[\\s\\S]*?-->/g,\n\tspaceRegExp: /&nbsp;|&#160;/gi,\n\tHTMLEntityRegExp: /&\\S+?;/g,\n\n\t// \\u2014 = em-dash\n\tconnectorRegExp: /--|\\u2014/g,\n\n\t// Characters to be removed from input text.\n\tremoveRegExp: new RegExp(\n\t\t[\n\t\t\t'[',\n\n\t\t\t// Basic Latin (extract)\n\t\t\t'\\u0021-\\u0040\\u005B-\\u0060\\u007B-\\u007E',\n\n\t\t\t// Latin-1 Supplement (extract)\n\t\t\t'\\u0080-\\u00BF\\u00D7\\u00F7',\n\n\t\t\t/*\n\t\t\t * The following range consists of:\n\t\t\t * General Punctuation\n\t\t\t * Superscripts and Subscripts\n\t\t\t * Currency Symbols\n\t\t\t * Combining Diacritical Marks for Symbols\n\t\t\t * Letterlike Symbols\n\t\t\t * Number Forms\n\t\t\t * Arrows\n\t\t\t * Mathematical Operators\n\t\t\t * Miscellaneous Technical\n\t\t\t * Control Pictures\n\t\t\t * Optical Character Recognition\n\t\t\t * Enclosed Alphanumerics\n\t\t\t * Box Drawing\n\t\t\t * Block Elements\n\t\t\t * Geometric Shapes\n\t\t\t * Miscellaneous Symbols\n\t\t\t * Dingbats\n\t\t\t * Miscellaneous Mathematical Symbols-A\n\t\t\t * Supplemental Arrows-A\n\t\t\t * Braille Patterns\n\t\t\t * Supplemental Arrows-B\n\t\t\t * Miscellaneous Mathematical Symbols-B\n\t\t\t * Supplemental Mathematical Operators\n\t\t\t * Miscellaneous Symbols and Arrows\n\t\t\t */\n\t\t\t'\\u2000-\\u2BFF',\n\n\t\t\t// Supplemental Punctuation\n\t\t\t'\\u2E00-\\u2E7F',\n\t\t\t']',\n\t\t].join( '' ),\n\t\t'g'\n\t),\n\n\t// Remove UTF-16 surrogate points, see https://en.wikipedia.org/wiki/UTF-16#U.2BD800_to_U.2BDFFF\n\tastralRegExp: /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n\twordsRegExp: /\\S\\s+/g,\n\tcharacters_excluding_spacesRegExp: /\\S/g,\n\n\t/*\n\t * Match anything that is not a formatting character, excluding:\n\t * \\f = form feed\n\t * \\n = new line\n\t * \\r = carriage return\n\t * \\t = tab\n\t * \\v = vertical tab\n\t * \\u00AD = soft hyphen\n\t * \\u2028 = line separator\n\t * \\u2029 = paragraph separator\n\t */\n\tcharacters_including_spacesRegExp: /[^\\f\\n\\r\\t\\v\\u00AD\\u2028\\u2029]/g,\n\tl10n: {\n\t\ttype: 'words',\n\t},\n};\n","/**\n * External dependencies\n */\nimport { extend, flow } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { defaultSettings } from './defaultSettings';\nimport stripTags from './stripTags';\nimport transposeAstralsToCountableChar from './transposeAstralsToCountableChar';\nimport stripHTMLEntities from './stripHTMLEntities';\nimport stripConnectors from './stripConnectors';\nimport stripRemovables from './stripRemovables';\nimport stripHTMLComments from './stripHTMLComments';\nimport stripShortcodes from './stripShortcodes';\nimport stripSpaces from './stripSpaces';\nimport transposeHTMLEntitiesToCountableChars from './transposeHTMLEntitiesToCountableChars';\n\n/**\n * @typedef {import('./defaultSettings').WPWordCountDefaultSettings}  WPWordCountSettings\n * @typedef {import('./defaultSettings').WPWordCountUserSettings}     WPWordCountUserSettings\n */\n\n/**\n * Possible ways of counting.\n *\n * @typedef {'words'|'characters_excluding_spaces'|'characters_including_spaces'} WPWordCountStrategy\n */\n\n/**\n * Private function to manage the settings.\n *\n * @param {WPWordCountStrategy}     type         The type of count to be done.\n * @param {WPWordCountUserSettings} userSettings Custom settings for the count.\n *\n * @return {WPWordCountSettings} The combined settings object to be used.\n */\nfunction loadSettings( type, userSettings ) {\n\tconst settings = extend( {}, defaultSettings, userSettings );\n\n\tsettings.shortcodes = settings.l10n?.shortcodes ?? [];\n\n\tif ( settings.shortcodes && settings.shortcodes.length ) {\n\t\tsettings.shortcodesRegExp = new RegExp(\n\t\t\t'\\\\[\\\\/?(?:' + settings.shortcodes.join( '|' ) + ')[^\\\\]]*?\\\\]',\n\t\t\t'g'\n\t\t);\n\t}\n\n\tsettings.type = type;\n\n\tif (\n\t\tsettings.type !== 'characters_excluding_spaces' &&\n\t\tsettings.type !== 'characters_including_spaces'\n\t) {\n\t\tsettings.type = 'words';\n\t}\n\n\treturn settings;\n}\n\n/**\n * Count the words in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of words.\n */\nfunction countWords( text, regex, settings ) {\n\ttext = flow(\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\tstripHTMLEntities.bind( null, settings ),\n\t\tstripConnectors.bind( null, settings ),\n\t\tstripRemovables.bind( null, settings )\n\t)( text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count the characters in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of characters.\n */\nfunction countCharacters( text, regex, settings ) {\n\ttext = flow(\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\ttransposeAstralsToCountableChar.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\ttransposeHTMLEntitiesToCountableChars.bind( null, settings )\n\t)( text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count some words.\n *\n * @param {string}                  text         The text being processed\n * @param {WPWordCountStrategy}     type         The type of count. Accepts 'words', 'characters_excluding_spaces', or 'characters_including_spaces'.\n * @param {WPWordCountUserSettings} userSettings Custom settings object.\n *\n * @example\n * ```js\n * import { count } from '@wordpress/wordcount';\n * const numberOfWords = count( 'Words to count', 'words', {} )\n * ```\n *\n * @return {number} The word or character count.\n */\nexport function count( text, type, userSettings ) {\n\tconst settings = loadSettings( type, userSettings );\n\tlet matchRegExp;\n\tswitch ( settings.type ) {\n\t\tcase 'words':\n\t\t\tmatchRegExp = settings.wordsRegExp;\n\t\t\treturn countWords( text, matchRegExp, settings );\n\t\tcase 'characters_including_spaces':\n\t\t\tmatchRegExp = settings.characters_including_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tcase 'characters_excluding_spaces':\n\t\t\tmatchRegExp = settings.characters_excluding_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripConnectors( settings, text ) {\n\treturn text.replace( settings.connectorRegExp, ' ' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLComments( settings, text ) {\n\treturn text.replace( settings.HTMLcommentRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripHTMLEntities( settings, text ) {\n\treturn text.replace( settings.HTMLEntityRegExp, '' );\n}\n","/**\n * Removes items matched in the regex.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripRemovables( settings, text ) {\n\treturn text.replace( settings.removeRegExp, '' );\n}\n","/**\n * Replaces items matched in the regex with a new line.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripShortcodes( settings, text ) {\n\tif ( settings.shortcodesRegExp ) {\n\t\treturn text.replace( settings.shortcodesRegExp, '\\n' );\n\t}\n\treturn text;\n}\n","/**\n * Replaces items matched in the regex with spaces.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripSpaces( settings, text ) {\n\treturn text.replace( settings.spaceRegExp, ' ' );\n}\n","/**\n * Replaces items matched in the regex with new line\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function stripTags( settings, text ) {\n\treturn text.replace( settings.HTMLRegExp, '\\n' );\n}\n","/**\n * Replaces items matched in the regex with character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeAstralsToCountableChar( settings, text ) {\n\treturn text.replace( settings.astralRegExp, 'a' );\n}\n","/**\n * Replaces items matched in the regex with a single character.\n *\n * @param {import('./index').WPWordCountSettings} settings The main settings object containing regular expressions\n * @param {string}                                text     The string being counted.\n *\n * @return {string} The manipulated text.\n */\nexport default function transposeHTMLEntitiesToCountableChars(\n\tsettings,\n\ttext\n) {\n\treturn text.replace( settings.HTMLEntityRegExp, 'a' );\n}\n","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}